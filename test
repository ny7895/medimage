import requests
from PIL import Image
from torchvision.transforms import ToTensor
import torch.nn.functional as F
import torch
from torch import Tensor
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# Download image from URL
url = 'https://example.com/image.jpg'
response = requests.get(url, stream=True)
img = Image.open(response.raw)

# Preprocess image
transform = ToTensor()
img_tensor = transform(img).unsqueeze(0)

# Load model and make prediction
model_path = 'path/to/model.pth'
model = torch.load(model_path)
model.eval()
with torch.no_grad():
    output = model(img_tensor)
    prob = F.sigmoid(output).item()

# Print result
if prob > 0.5:
    # Send email alert
    subject = 'Emergency situation detected'
    body = 'An emergency situation has been detected in a medical image.'
    msg = MIMEMultipart()
    msg['From'] = sender_email
    msg['To'] = receiver_email
    msg['Subject'] = subject
    msg.attach(MIMEText(body, 'plain'))
    text = msg.as_string()
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.starttls()
    server.login(sender_email, password)
    server.sendmail(sender_email, receiver_email, text)
    server.quit()
    
    print('Emergency situation detected with probability {:.2f}'.format(prob))
else:
    print('No emergency situation detected with probability {:.2f}'.format(1 - prob))
